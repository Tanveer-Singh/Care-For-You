@model  List<CareLib.ViewModel.DoctorViewModel>
@{
    ViewBag.Title = "Index";
    var grid = new WebGrid(source: Model,
                                rowsPerPage: 5, selectionFieldName: "SelectedRow");

}
<style type="text/css">
    .webGrid
    {
        margin: 4px;
        border-collapse: collapse;
        width: 513px;
        z-index: 0;
    }
    .header
    {
        background-color: #E8E8E8;
        font-weight: bold;
        color: #FFF;
        z-index: 1;
    }
    .webGrid th, .webGrid td
    {
        border: 1px solid #C0C0C0;
        padding: 5px;
        height: 10px;
    }
    .alt
    {
        background-color: #E8E8E8;
        color: #000;
    }
    .person
    {
        width: 200px;
        font-weight: bold;
    }
    .fixedheadertable
    {
        left: 0px;
        position: relative;
        top: 0px;
        padding-right: 2px;
        padding-left: 2px;
        padding-bottom: 2px;
        padding-top: 2px;
    }
</style>
<h2>
    Index</h2>
@* <div style =" background-color:#E8E8E8;  
        height:40px;width:500px; margin:0;padding:0">*@
<table cellspacing="0" cellpadding="0" rules="all" border="1" id="tblHeader" class="header"
    style="height: 50px; margin-top: -5px; z-index: 1; position: absolute;">
    <tr>
        <td style="width: 215px; text-align: center">
            Doctor Name
        </td>
        <td style="width: 192px; text-align: center">
            Email
        </td>
        <td style="width: 46px; text-align: center">
            Sex
        </td>
        <td style="width: 60px; text-align: center">
        </td>
    </tr>
</table>
@*</div>*@
<div style="height: 120px; width: 540px; overflow: auto;">
    @*<div id='table-container'>*@
    @grid.GetHtml(htmlAttributes: new { id = "gvTheGrid" },
tableStyle: "webGrid", headerStyle: "header",
alternatingRowStyle: "alt",
columns: grid.Columns(
    grid.Column("DoctorFullName", "Doctor Name", canSort: true, style: "person"),
    grid.Column("DocEmail", "Email", canSort: false,
                format: (item) => (item.DocEmail ?? "Not Available")),
    grid.Column("Sex", "Sex", canSort: false),
    grid.Column(header: null, canSort: false,
                format: @<text>@Html.ActionLink("Select", "Index", new { id = @item.DocID })</text>)))
    @*                </div>      *@
</div>


